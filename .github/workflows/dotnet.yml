# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./src/WeatherApi/WeatherApi.csproj
    - name: Build
      run: dotnet build --no-restore ./src/WeatherApi/WeatherApi.csproj
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Test
      run: dotnet test --verbosity normal ./test/WeatherApi.Test/WeatherApi.Test.csproj
  publish:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
    - uses: actions/checkout@v3 # 없으면 publish가 안됨. project 파일 not found 나옴 
    - name: Install dotnet if not exists
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USERNAME }}
        key: ${{ secrets.LIGHTSAIL_KEY }}
        script: |
          if ! dotnet --version; then
            sudo apt-get update
            sudo apt-get install -y apt-transport-https
            sudo apt-get update
            sudo apt-get install -y aspnetcore-runtime-6.0
          fi
    - name: Stop service if Exists
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USERNAME }}
        key: ${{ secrets.LIGHTSAIL_KEY }}
        script: |
          if sudo systemctl is-active --quiet weather-api.service; then
            sudo systemctl stop weather-api.service
          fi
    - name: Publish
      run: dotnet publish --configuration Release --output ./publish ./src/WeatherApi/WeatherApi.csproj
    - name: Deploy to Lightsail
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USERNAME }}
        key: ${{ secrets.LIGHTSAIL_KEY }}
        source: "./publish"
        target: "/home/ubuntu/weather-api"
    - name: Service Install if not Exists
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USERNAME }}
        key: ${{ secrets.LIGHTSAIL_KEY }}
        script: |
          if ! sudo systemctl is-active --quiet weather-api.service; then
            sudo cp /home/ubuntu/weather-api/publish/weather-api.service /etc/systemd/system/weather-api.service
            sudo systemctl enable weather-api.service
          fi
    - name: Service Start
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USERNAME }}
        key: ${{ secrets.LIGHTSAIL_KEY }}
        script: |
          sudo systemctl start weather-api.service